function uiThresholds(movie, mapping)
% show photon stream histograms to select peak finding thresholds
%
% names is a cell array of strings and defines the order of the streams.
% it must contain as many names as there are photon streams
    
    if nargin == 0
        error('ui:NoMovie', ...
            'threshold selection is not possible w/o a movie');
    elseif isempty(movie)
        error('ui:EmptyMovie', ...
            'threshold selection is not possible with an empty movie');
    end
    
    edges = movie.photonStreamHistogramEdges;
    hists = movie.photonStreamHistograms;
    numPhotonStreams = size(hists, 2);
    
    fig = figure( ...
        'MenuBar', 'none', ...
        'Toolbar', 'none', ...
        'Color', get(0, 'defaultuicontrolbackgroundcolor'), ...
        'Name', 'Select thresholds (1-256)', ...
        'NumberTitle', 'off', ...
        'NextPlot','add', ...
        'Units', 'normalized', ...
        'Position', [.2, .2, .7, .2], ...
        'Resize', 'on');
    
    spacing =  0.03;
    width = (1 - spacing * (numPhotonStreams + 1)) / numPhotonStreams;
    
    for i = 1:numPhotonStreams
        namePhotonStream = mapping.names{i};
        idxPhotonStream = mapping.getIndex(namePhotonStream);
        
        x = i * spacing + (i - 1) * width;
        
        % create each histogram and its associated control
        h = axes( ...
            'Parent', fig, ...
            'Units', 'normalized', ...
            'HandleVisibility', 'callback', ...
            'OuterPosition', [x, .45, width, .51], ...
            'NextPlot', 'add');
        bar(h, edges, hists(:, idxPhotonStream), 'histc');
        uicontrol( ...
            'Parent', fig, ...
            'Style', 'text', ...
            'String', namePhotonStream, ...
            'Units', 'normalized', ...
            'Position', [x, .25, width, .1]);
        uicontrol( ...
            'Parent', fig, ...
            'Style', 'edit', ...
            'String', num2str(movie.peakThresholds(idxPhotonStream)), ...
            'Units', 'normalized', ...
            'BackgroundColor', [0.937, 0.937, 0.937], ...
            'Position', [x, .05, width, .2], ...
            'Callback', {@editCallback, movie, idxPhotonStream});
    end
    
    waitfor(fig);
end

function editCallback(hObject, eventdata, movie, iPhotonStream)
% update the changed threshold in the movie
    
%     newThreshold = uint8(str2double(get(hObject, 'String')));
    newThreshold = str2double(get(hObject, 'String'));
    movie.peakThresholds(iPhotonStream) = newThreshold;
end
